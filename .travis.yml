sudo: required
dist: trusty
language: python
matrix:
    include:
        # check code style and Python 2.7
        - python: 2.7
          env: TEST_MODE=PEP8
        # run tests with keras from source and Python 2.7
        - python: 2.7
          env: KERAS_HEAD=true
          env: TEST_MODE=TESTS
        # run tests with keras from source and Python 3.6
        - python: 3.6
          env: KERAS_HEAD=true
          env: TEST_MODE=TESTS
        # run tests with keras from PyPI and Python 2.7
        - python: 2.7
          env: TEST_MODE=TESTS
        # run tests with keras from PyPI and Python 3.6
        - python: 3.6
          env: TEST_MODE=TESTS
        # run import test and Python 2.7
        - python: 2.7
          env: TEST_MODE=IMPORTS
        # run import test and Python 3.6
        - python: 3.6
          env: TEST_MODE=IMPORTS


before_install:
  - sudo apt-get update
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION curl
  - source activate test-environment

install:
  - if [[ "$TEST_MODE" == "PEP8" ]]; then
      pip install -e .[pep8];
    elif [[ "$TEST_MODE" == "TESTS" ]]; then
      pip install -e .[tests];
    elif [[ "$TEST_MODE" == "IMPORTS" ]]; then
      pip install .;
    fi
  - if [[ $KERAS_HEAD == "true" ]]; then
      pip install --no-deps git+https://github.com/keras-team/keras.git --upgrade;
      pip install --no-deps tf-nightly --upgrade;
      function run_integration () {
        mkdir -p test_keras;
        curl "$1/image_test.py" -L -o test_keras/image_test.py;
        curl "$1/sequence_test.py" -L -o test_keras/sequence_test.py;
        curl "$1/text_test.py" -L -o test_keras/text_test.py;
        py.test test_keras;
      }

script:
  - if [[ "$TEST_MODE" == "PEP8" ]]; then
      flake8 -v --count;
    elif [[ "$TEST_MODE" == "TESTS" ]]; then
      py.test tests --cov-config .coveragerc --cov=keras_preprocessing tests;
    elif [[ $KERAS_HEAD == "true" ]]; then
      run_integration 'https://raw.githubusercontent.com/keras-team/keras/master/tests/integration_tests/preprocessing'
      run_integration 'https://raw.githubusercontent.com/tensorflow/tensorflow/master/tensorflow/python/keras/preprocessing'
    fi
    elif [[ "$TEST_MODE" == "IMPORTS" ]]; then
      # Sanity check
      python -c "import keras_preprocessing; from keras_preprocessing import image; from keras_preprocessing import sequence; from keras_preprocessing import text";
    fi
